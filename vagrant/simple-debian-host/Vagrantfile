# -*- mode: ruby -*-
# vi: set ft=ruby :

BOX_IMAGE = "generic/debian9"

Vagrant.configure("2") do |config|
  # https://docs.vagrantup.com.

  # NOTE: This will enable public access to the opened port
  #config.vm.network "forwarded_port", guest: 22, host: 2222

  # NOTE: This will enable only private access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  config.vm.define "simplehost" do |subconfig|
    subconfig.vm.box = BOX_IMAGE
    subconfig.vm.hostname = "simplehost"
    subconfig.vm.network :private_network, 
                          ip: "10.50.0.50",
                          :libvirt__netmask => '255.255.255.0',
                          :libvirt__network_name => 'simple',
                          :libvirt__forward_mode => 'none'

    subconfig.vm.provision "shell", inline: <<-SHELL
      sudo apt-get update
      sudo apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common
      curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
      sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
      sudo apt-get update
      sudo apt-get install -y docker-ce docker-ce-cli containerd.io
    SHELL
  end

  # Share an additional folder to the guest VM. 
  config.vm.synced_folder "/config", "/config"

  config.ssh.insert_key = false
  config.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/authorized_keys"

  # Provider-specific configuration 
  config.vm.provider :libvirt do |domain|
    domain.memory = 6024
    domain.cpus = 1
    domain.features = ['acpi', 'apic', 'pae' ]
  end 

  # Enable provisioning with a shell script. 
  config.vm.provision "shell", inline: <<-SHELL
    useradd -m -s /bin/bash -U wlanboy -u 300 --groups docker
    cp -pr /home/vagrant/.ssh /home/wlanboy/
    chown -R wlanboy:wlanboy /home/wlanboy
    echo "%wlanboy ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/wlanboy
  SHELL
end
